{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlFor","modetext","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","placeholder","backgroundColor","onChange","event","target","rows","newText","toUpperCase","toLowerCase","charAt","slice","document","getElementById","select","navigator","clipboard","writeText","split","join","focus","length","filter","element","defaultProps","About","App","setMode","_useState3","_useState4","modeBtnText","setModeBtnText","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.95567c9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\">{props.title}</NavLink>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/about\">{props.aboutText}</NavLink>\r\n          </li>\r\n        </ul>\r\n        <div className={`form-check form-switch text-${props.mode==='light' ? 'dark' : 'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.modetext}</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    aboutText : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: \"About\"\r\n}","import React, {useState} from 'react'\r\nimport '../App.css';\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = ()=> {\r\n      // console.log(\"up clicked\");\r\n      let newText = text.toUpperCase();\r\n      setText(newText);\r\n    }\r\n\r\n    const handleLowClick = ()=> {\r\n      // console.log(\"up clicked\");\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n    }\r\n\r\n    const handleCapitalize = ()=> {\r\n      // console.log(\"up clicked\");\r\n      let newText = text.charAt(0).toUpperCase() + text.slice(1);\r\n      setText(newText);\r\n    }\r\n\r\n    const handleOnChange = (event)=> {\r\n      // console.log(\"on change\");\r\n      setText(event.target.value);\r\n    }\r\n\r\n    const handleClearAll = (event)=> {\r\n      // console.log(\"on change\");\r\n      setText(\"\");\r\n      document.getElementById(\"myBox\").focus();\r\n    }\r\n\r\n    const handleCopy = ()=> {\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleExtraSpaces = ()=> {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n    }\r\n\r\n    const [text,setText] = useState(\"\");\r\n  \r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color : props.mode==='dark' ? 'white' : 'black'}}>\r\n    <h2>{props.heading}</h2>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} placeholder=\"Enter your text here\" style={{backgroundColor : props.mode==='dark' ? 'gray' : 'white',color: props.mode==='dark' ? 'white' : 'black'}} onChange={handleOnChange} id=\"myBox\" rows=\"3\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Uppercase</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLowClick}>Lowercase</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCapitalize}>Capitalize</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleClearAll}>Clear All</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color : props.mode==='dark' ? 'white' : 'black'}}>\r\n      <h3>Your text summary</h3>\r\n      <div className=\"countBox\">\r\n      <p>Character Count : {text.length}</p>\r\n      <p>Word Count : {text.split(\" \").filter((element)=>{return element.length!=0}).length}</p>\r\n      {/* <p>{text.split(\" \").length} words, {text.length} characters.</p> */}\r\n      <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n      </div>\r\n      <h3>Preview</h3>\r\n      <p>{text.length>0?text:\"Enter something in the box to preview it here...\"}</p>\r\n    </div>\r\n    </>\r\n    \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n  return (\r\n    <div className=\"container\" style={{color : props.mode==='dark' ? 'white' : 'black'}}>\r\n        <h1 className=\"my-3\">About Us</h1>\r\n        <p>This is a text analyzer website in which we can convert the text in uppercase, lowercase, captitalize, copy, remove extra spaces and clear the text...</p>   \r\n    </div>\r\n  )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { useState } from 'react';\n// import About from './components/About';\nimport React from 'react'\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport About from './components/About';\n\n\nfunction App() {\n  const [mode,setMode] = useState('light');\n  const [modeBtnText,setModeBtnText] = useState('Dark Mode');\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      setModeBtnText('Light Mode');\n      document.body.style.backgroundColor = '#395B64';\n    }else{\n      setMode('light');\n      setModeBtnText('Dark Mode');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n\n  return (\n    <>\n      <Router>\n      <Navbar title=\"Text Utils\" mode={mode} toggleMode={toggleMode} modetext={modeBtnText}/>\n      \n      <div className=\"container my-3\">\n      \n        <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm heading=\"Enter the text to analyze below:\" mode={mode}/>\n          </Route>\n        </Switch>\n\n      </div>\n      </Router>\n      \n     \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}